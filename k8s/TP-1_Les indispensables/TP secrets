### Objectif : Comprendre le fonctionnement des Secrets dans Kubernetes.

## Créer un secret nommé secret1 contenant les données login : frerot password : 12345678
# Utiliser la commande kubectl create secret avec l'option --from-literal.
 $ kubectl create secret generic secret1 \
    --from-literal="login=frerot" \
    --from-literal="password=12345678"
secret/secret1 created

# Afficher le détail du Secret.
 $ kubectl describe secrets secret1
Name:         secret1
Namespace:    default
Labels:       <none>
Annotations:  <none>

Type:  Opaque

Data
====
login:     6 bytes
password:  8 bytes
__________________________________________________________________________________________________________________
## Créer un second secretnommé secret2contenant les données login : gwenael password : azerty
# Utiliser la commande kubectl create secret avec l'option --from-file.
 $ echo -n "gwenael" > login   // Créer le fichier login
 $ echo -n "azerty" > password // Créer le fichier password

# Créer le secret
 $ kubectl create secret generic secret2 \
  --from-file=login \
  --from-file=password
secret "secret2" created
________________________________________________________________________________________________________________
## Créer un troisième secret nommé secret3 contenant les données login : rolf password : treasure
# Utiliser un fichier de description yaml.
Les valeurs doivent être encodées en base64.

 $ echo -n "rolf" | base64
cm9sZg==

 $ echo -n "treasure" | base64
dHJlYXN1cmU=

# Créer le fichier secret3.yml

apiVersion: v1
kind: Secret
metadata:
  name: secret3
type: Opaque
data:
  login: cm9sZg==
  password: dHJlYXN1cmU=

# Créer le secret
 $ kubectl create -f secret3.yml
secret "secret3" created
____________________________________________________________________________________________________________________

## Créer un Pod de test nommé test-secrets,basé sur l'image busybox,qui monte les secrets secret1, secret2 et secret3 sous forme de volumes.
Structure de départ : secret-pod.yml

apiVersion: v1
kind: Pod
metadata:
  name: test-secrets
spec:
  containers:
    - name: test-secrets
      image: busybox
      command:
        - sleep
        - "3600"

# Créer le Pod secret-pod.yml
apiVersion: v1
kind: Pod
metadata:
  name: test-secrets
spec:
  containers:
    - name: test-secrets
      image: busybox
      command:
        - sleep
        - "3600"
      volumeMounts:
        - name: volume-secret1
          mountPath: /etc/secret1
        - name: volume-secret2
          mountPath: /etc/secret2
        - name: volume-secret3
          mountPath: /etc/secret3
  volumes:
    - name: volume-secret1
      secret:
        secretName: secret1
    - name: volume-secret2
      secret:
        secretName: secret2
    - name: volume-secret3
      secret:
        secretName: secret3
$ kubectl create -f secret-pod.yml
pod test-secrets created

# Vérifiez que le Pod est en cours d'exécution.
 kubectl get pod test-secrets
NAME           READY     STATUS    RESTARTS   AGE
test-secrets   1/1       Running   0          35s

# Se connecter dans le conteneur et vérifier que les secrets sont bien présents.
 kubectl exec -it test-secrets -- /bin/sh
/# ls /etc/secret*
/etc/secret1:
login     password

/etc/secret2:
login     password

/etc/secret3:
login  username

/ # cat /etc/secret1/login ; echo
frerot
/ # cat /etc/secret1/password  ; echo
12345678

